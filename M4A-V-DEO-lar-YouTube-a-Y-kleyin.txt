<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>M4A VİDEO'ları YouTube'a Yükleyin</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background: linear-gradient(135deg, #1e3c72, #2a5298);
            color: #333;
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            width: 100%;
            margin: 0 auto;
            background: white;
            border-radius: 20px;
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

        .header {
            background: linear-gradient(135deg, #ff0000, #cc0000);
            color: white;
            padding: 30px;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

        .header::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 1px, transparent 1px);
            background-size: 20px 20px;
            animation: float 20s linear infinite;
        }

        .logo-container {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 15px;
            margin-bottom: 15px;
        }

        .logo {
            font-size: 2.5rem;
            color: white;
        }

        .header h1 {
            font-size: 2.2rem;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }

        .header p {
            font-size: 1.1rem;
            opacity: 0.9;
        }

        /* Navigasyon Menüsü */
        .nav-menu {
            background: rgba(0, 0, 0, 0.2);
            padding: 15px;
            border-radius: 10px;
            margin-top: 20px;
        }

        .nav-links {
            display: flex;
            justify-content: center;
            gap: 20px;
            flex-wrap: wrap;
        }

        .nav-link {
            color: white;
            text-decoration: none;
            padding: 10px 20px;
            border-radius: 8px;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 8px;
            background: rgba(255, 255, 255, 0.1);
        }

        .nav-link:hover {
            background: rgba(255, 255, 255, 0.2);
            transform: translateY(-2px);
        }

        .content {
            padding: 30px;
        }

        .welcome-section {
            text-align: center;
            margin-bottom: 40px;
            padding: 25px;
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            border-radius: 15px;
            border-left: 5px solid #4285f4;
        }

        .welcome-section h2 {
            color: #333;
            margin-bottom: 15px;
            font-size: 1.8rem;
        }

        .welcome-section p {
            color: #666;
            font-size: 1.1rem;
            line-height: 1.6;
        }

        .stats-counter {
            display: flex;
            justify-content: space-around;
            margin: 40px 0;
            flex-wrap: wrap;
            gap: 20px;
        }

        .stat-item {
            text-align: center;
            padding: 20px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            border-radius: 15px;
            color: white;
            min-width: 150px;
            box-shadow: 0 5px 20px rgba(102, 126, 234, 0.3);
        }

        .stat-number {
            font-size: 2.5em;
            font-weight: bold;
            margin-bottom: 5px;
        }

        .stat-label {
            font-size: 1em;
            opacity: 0.9;
        }

        .auth-section {
            text-align: center;
            margin: 30px 0;
            padding: 25px;
            background: linear-gradient(135deg, #fff3cd, #ffeaa7);
            border-radius: 15px;
            border: 3px solid #ffc107;
        }

        .auth-section h3 {
            color: #333;
            margin-bottom: 15px;
        }

        .form-section {
            background: #f8f9fa;
            padding: 25px;
            border-radius: 15px;
            margin-bottom: 30px;
            border: 2px solid #e9ecef;
            display: none;
        }

        .form-section h3 {
            color: #333;
            margin-bottom: 20px;
            font-size: 1.5rem;
            text-align: center;
        }

        .form-group {
            margin-bottom: 25px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #444;
            font-size: 1.1rem;
        }

        .form-control {
            width: 100%;
            padding: 15px;
            border: 2px solid #e1e5e9;
            border-radius: 10px;
            font-size: 16px;
            transition: all 0.3s ease;
        }

        .form-control:focus {
            outline: none;
            border-color: #4285f4;
            box-shadow: 0 0 0 3px rgba(66, 133, 244, 0.1);
        }

        textarea.form-control {
            min-height: 120px;
            resize: vertical;
        }

        .file-upload {
            border: 2px dashed #4285f4;
            border-radius: 10px;
            padding: 25px;
            text-align: center;
            background: #f8f9ff;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
        }

        .file-upload:hover {
            background: #f0f2ff;
            border-color: #3367d6;
        }

        .file-upload.dragover {
            border-color: #3367d6;
            background: #e8ebff;
            transform: scale(1.02);
        }

        .file-upload i {
            font-size: 3rem;
            color: #4285f4;
            margin-bottom: 15px;
            display: block;
        }

        .file-info {
            margin-top: 10px;
            font-size: 0.9rem;
            color: #666;
        }

        .date-input {
            display: flex;
            gap: 10px;
        }

        .date-input input {
            flex: 1;
        }

        .privacy-options {
            display: flex;
            gap: 15px;
            margin-top: 10px;
        }

        .privacy-option {
            flex: 1;
            text-align: center;
            padding: 15px 10px;
            border: 2px solid #ddd;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
            background: white;
        }

        .privacy-option:hover {
            border-color: #4285f4;
        }

        .privacy-option.selected {
            border-color: #4285f4;
            background: #f0f2ff;
        }

        .privacy-option input {
            display: none;
        }

        .format-options {
            display: flex;
            gap: 15px;
            margin-top: 10px;
            flex-wrap: wrap;
        }

        .format-option {
            flex: 1;
            text-align: center;
            padding: 15px 10px;
            border: 2px solid #ddd;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
            background: white;
            min-width: 120px;
        }

        .format-option:hover {
            border-color: #4285f4;
        }

        .format-option.selected {
            border-color: #4285f4;
            background: #f0f2ff;
        }

        .format-option input {
            display: none;
        }

        .format-icon {
            font-size: 1.5rem;
            margin-bottom: 8px;
            display: block;
        }

        .action-buttons {
            display: flex;
            flex-direction: column;
            gap: 15px;
            margin: 40px 0;
        }

        .btn {
            padding: 18px;
            border: none;
            border-radius: 12px;
            font-size: 1.2rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 15px;
            text-decoration: none;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .btn:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.2);
        }

        .btn-google {
            background: linear-gradient(135deg, #4285f4, #3367d6);
            color: white;
        }

        .btn-youtube {
            background: linear-gradient(135deg, #ff0000, #cc0000);
            color: white;
        }

        .btn-drive {
            background: linear-gradient(135deg, #34a853, #2e8b46);
            color: white;
        }

        .btn-convert {
            background: linear-gradient(135deg, #fbbc05, #e6a100);
            color: white;
        }

        .btn-purchase {
            background: linear-gradient(135deg, #8e44ad, #732d91);
            color: white;
        }

        .btn-api {
            background: linear-gradient(135deg, #00b894, #00a085);
            color: white;
        }

        .btn i {
            font-size: 1.5rem;
        }

        .features-section {
            margin-top: 50px;
        }

        .features-section h2 {
            text-align: center;
            margin-bottom: 30px;
            color: #333;
            font-size: 1.8rem;
        }

        .feature-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 25px;
        }

        .feature-card {
            background: white;
            padding: 25px;
            border-radius: 15px;
            text-align: center;
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
            border: 2px solid transparent;
        }

        .feature-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 15px 35px rgba(0,0,0,0.15);
            border-color: #4285f4;
        }

        .feature-icon {
            font-size: 3em;
            margin-bottom: 20px;
            display: block;
            color: #4285f4;
        }

        .feature-card h3 {
            font-size: 1.3em;
            margin-bottom: 12px;
            color: #333;
        }

        .feature-card p {
            color: #666;
            font-size: 1em;
            line-height: 1.5;
        }

        .progress-section {
            margin-top: 30px;
            display: none;
            text-align: center;
            padding: 30px;
            background: linear-gradient(135deg, #e8f4fd, #d4edfa);
            border-radius: 15px;
            border: 2px solid #bee5eb;
        }

        .progress-bar {
            width: 100%;
            height: 25px;
            background: #e9ecef;
            border-radius: 15px;
            overflow: hidden;
            margin: 25px 0;
            position: relative;
            box-shadow: inset 0 2px 5px rgba(0,0,0,0.1);
        }

        .progress-fill {
            height: 100%;
            background: linear-gradient(135deg, #4285f4, #34a853);
            width: 0%;
            transition: width 0.5s ease;
            position: relative;
            overflow: hidden;
        }

        .progress-fill::after {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);
            animation: shimmer 2s infinite;
        }

        .upload-status {
            background: linear-gradient(135deg, #e8f4fd, #d4edfa);
            border-radius: 15px;
            padding: 20px;
            margin: 20px 0;
            text-align: center;
            border: 2px solid #bee5eb;
            display: none;
        }

        .status-item {
            display: flex;
            justify-content: space-between;
            margin: 10px 0;
            padding: 10px;
            background: white;
            border-radius: 8px;
            border: 1px solid #e9ecef;
            transition: all 0.3s ease;
        }

        .status-item:hover {
            transform: translateX(5px);
            border-color: #667eea;
        }

        .status-label {
            font-weight: bold;
            color: #333;
        }

        .status-value {
            color: #666;
            font-weight: 500;
        }

        @keyframes shimmer {
            0% { left: -100%; }
            100% { left: 100%; }
        }

        .result-section {
            text-align: center;
            padding: 30px;
            background: linear-gradient(135deg, #e8f5e9, #c8e6c9);
            border-radius: 15px;
            margin-top: 30px;
            display: none;
        }

        .success-icon {
            font-size: 4rem;
            color: #34a853;
            margin-bottom: 20px;
        }

        .channel-videos-section {
            margin-top: 50px;
            padding: 25px;
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            border-radius: 15px;
            border: 2px solid #e9ecef;
            display: none;
        }

        .channel-videos-section h2 {
            text-align: center;
            margin-bottom: 30px;
            color: #333;
            font-size: 1.8rem;
        }

        .videos-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .video-item {
            background: white;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
            position: relative;
        }

        .video-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.15);
        }

        .video-thumbnail {
            width: 100%;
            height: 180px;
            object-fit: cover;
        }

        .video-info {
            padding: 15px;
        }

        .video-title {
            font-weight: 600;
            margin-bottom: 8px;
            color: #333;
            font-size: 1.1rem;
            line-height: 1.4;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .video-meta {
            display: flex;
            justify-content: space-between;
            color: #666;
            font-size: 0.9rem;
        }

        .video-privacy {
            position: absolute;
            top: 10px;
            right: 10px;
            background: rgba(0,0,0,0.7);
            color: white;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 0.8rem;
        }

        .no-videos {
            text-align: center;
            padding: 40px;
            color: #666;
            grid-column: 1 / -1;
        }

        .step-indicator {
            display: flex;
            justify-content: space-between;
            margin: 40px 0;
            position: relative;
            padding: 0 20px;
        }

        .step-indicator::before {
            content: '';
            position: absolute;
            top: 20px;
            left: 10%;
            right: 10%;
            height: 4px;
            background: #e9ecef;
            z-index: 1;
            border-radius: 2px;
        }

        .step {
            display: flex;
            flex-direction: column;
            align-items: center;
            position: relative;
            z-index: 2;
            flex: 1;
        }

        .step-number {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: #e9ecef;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 10px;
            font-weight: bold;
            font-size: 1.2em;
            border: 3px solid white;
            box-shadow: 0 3px 10px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
        }

        .step.active .step-number {
            background: #667eea;
            color: white;
            transform: scale(1.1);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        }

        .step.completed .step-number {
            background: #48bb78;
            color: white;
            transform: scale(1.05);
        }

        .step-label {
            font-size: 0.9em;
            text-align: center;
            font-weight: 600;
            color: #666;
        }

        .step.active .step-label {
            color: #667eea;
            font-weight: 700;
        }

        .security-notice {
            background: linear-gradient(135deg, #d1ecf1, #bee5eb);
            border: 3px solid #bee5eb;
            border-radius: 15px;
            padding: 20px;
            margin: 20px 0;
            text-align: center;
            color: #0c5460;
        }

        .real-notice {
            background: linear-gradient(135deg, #e8f4fd, #d4edfa);
            border: 3px solid #4285f4;
            border-radius: 15px;
            padding: 20px;
            margin: 20px 0;
            text-align: center;
            animation: slideUp 0.6s ease;
        }

        /* Kopyalama Bileşeni */
        .copy-container {
            background: #2a2a2a;
            color: #fff;
            padding: 15px;
            border-radius: 10px;
            display: flex;
            align-items: center;
            gap: 15px;
            margin: 20px 0;
            justify-content: center;
            flex-wrap: wrap;
        }

        .copy-text {
            font-family: monospace;
            font-size: 1.1rem;
            background: rgba(255,255,255,0.1);
            padding: 8px 12px;
            border-radius: 5px;
        }

        .copy-btn {
            background: #ff0000;
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 5px;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .copy-btn:hover {
            background: #cc0000;
            transform: translateY(-2px);
        }

        /* YouTube Açıklama Bölümü */
        .youtube-description-section {
            margin-top: 40px;
            padding: 25px;
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            border-radius: 15px;
            border: 2px solid #e9ecef;
            display: none;
        }

        .youtube-description-section h3 {
            color: #333;
            margin-bottom: 20px;
            text-align: center;
            font-size: 1.5rem;
        }

        .youtube-description {
            background: white;
            padding: 20px;
            border-radius: 10px;
            border: 1px solid #e1e5e9;
            font-family: Arial, sans-serif;
            line-height: 1.6;
            max-height: 400px;
            overflow-y: auto;
            margin-bottom: 15px;
        }

        .youtube-description p {
            margin-bottom: 10px;
        }

        .youtube-description strong {
            color: #333;
        }

        .description-copy-btn {
            background: #ff0000;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 8px;
            margin: 0 auto;
            font-weight: 600;
        }

        .description-copy-btn:hover {
            background: #cc0000;
            transform: translateY(-2px);
        }

        .youtube-preview {
            margin-top: 25px;
            text-align: center;
        }

        .youtube-preview h4 {
            margin-bottom: 15px;
            color: #333;
        }

        .youtube-preview iframe {
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        /* Hata Bildirimi */
        .error-notification {
            position: fixed;
            top: 20px;
            right: 20px;
            background: #dc3545;
            color: white;
            padding: 15px 20px;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
            z-index: 1000;
            display: flex;
            align-items: center;
            gap: 10px;
            max-width: 400px;
            animation: slideInRight 0.3s ease;
        }

        .error-content {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .retry-btn {
            background: white;
            color: #dc3545;
            border: none;
            padding: 5px 10px;
            border-radius: 5px;
            cursor: pointer;
            font-weight: 600;
            margin-left: 10px;
        }

        .retry-btn:hover {
            background: #f8f9fa;
        }

        /* Yükleme Animasyonu */
        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.7);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 9999;
            display: none;
        }

        .loading-content {
            background: white;
            padding: 30px;
            border-radius: 15px;
            text-align: center;
            max-width: 400px;
            width: 90%;
        }

        .loading-spinner-large {
            border: 5px solid #f3f3f3;
            border-top: 5px solid #4285f4;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            animation: spin 1s linear infinite;
            margin: 0 auto 20px;
        }

        @keyframes slideInRight {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }

        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .footer {
            text-align: center;
            padding: 20px;
            background: #f8f9fa;
            border-top: 1px solid #e9ecef;
            color: #666;
            font-size: 0.9rem;
        }

        .social-links {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin: 20px 0;
        }

        .social-link {
            padding: 10px 20px;
            background: #f8f9fa;
            border-radius: 8px;
            text-decoration: none;
            color: #333;
            transition: all 0.3s ease;
            border: 2px solid #e9ecef;
        }

        .social-link:hover {
            background: #4285f4;
            color: white;
            transform: translateY(-2px);
            border-color: #4285f4;
        }

        .loading-spinner {
            border: 4px solid #f3f3f3;
            border-top: 4px solid #4285f4;
            border-radius: 50%;
            width: 25px;
            height: 25px;
            animation: spin 1s linear infinite;
            display: inline-block;
            margin-right: 12px;
        }

        .btn-link {
            display: inline-block;
            padding: 12px 24px;
            background: linear-gradient(135deg, #4285f4, #3367d6);
            color: white;
            text-decoration: none;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.3s ease;
            text-align: center;
            margin: 15px 0;
            box-shadow: 0 4px 12px rgba(66, 133, 244, 0.3);
        }

        .btn-link:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 18px rgba(66, 133, 244, 0.4);
            background: linear-gradient(135deg, #3367d6, #2851a3);
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        @keyframes float {
            0% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
            100% { transform: translateY(0px); }
        }

        @media (max-width: 768px) {
            .container {
                margin: 10px;
            }
            
            .header {
                padding: 20px;
            }
            
            .header h1 {
                font-size: 1.8rem;
            }
            
            .nav-links {
                flex-direction: column;
                align-items: center;
            }
            
            .content {
                padding: 20px;
            }
            
            .stats-counter {
                flex-direction: column;
                align-items: center;
            }
            
            .stat-item {
                width: 100%;
                max-width: 250px;
            }
            
            .feature-grid {
                grid-template-columns: 1fr;
            }
            
            .privacy-options {
                flex-direction: column;
            }
            
            .format-options {
                flex-direction: column;
            }
            
            .date-input {
                flex-direction: column;
            }
            
            .videos-container {
                grid-template-columns: 1fr;
            }
            
            .step-label {
                font-size: 0.8em;
            }
            
            .copy-container {
                flex-direction: column;
                text-align: center;
            }
            
            .youtube-preview iframe {
                height: 250px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <div class="logo-container">
                <i class="fab fa-youtube logo"></i>
                <div>
                    <h1>M4A VİDEO'ları YouTube'a Yükleyin</h1>
                    <p>MP3, MP4, M4A, WAV, FLAC ve diğer ses dosyalarınızı kolayca YouTube videolarına dönüştürün. Profesyonel kalitede videolar oluşturun ve müzik kariyerinizi bir üst seviyeye taşıyın.</p>
                </div>
            </div>
            
            
                    </a>
                </div>
            </div>
        </div>
        
        <div class="content">
            <div class="welcome-section">
                <h2>🎵 M4A VİDEO'ları YouTube'a Yükleyin!</h2>
                <p>MP3, MP4, M4A, WAV, FLAC ve diğer ses dosyalarınızı kolayca YouTube videolarına dönüştürün. 
                   Profesyonel kalitede videolar oluşturun ve müzik kariyerinizi bir üst seviyeye taşıyın.</p>
            </div>
            
            <div class="stats-counter">
                <div class="stat-item">
                    <div class="stat-number">1.5M+</div>
                    <div class="stat-label">Kullanıcı</div>
                </div>
                <div class="stat-item">
                    <div class="stat-number">38M+</div>
                    <div class="stat-label">Yükleme</div>
                </div>
                <div class="stat-item">
                    <div class="stat-number">2020</div>
                    <div class="stat-label">Beridir</div>
                </div>
            </div>

            <!-- Adım Göstergesi -->
            <div class="step-indicator">
                <div class="step active" id="step1">
                    <div class="step-number">1</div>
                    <div class="step-label">Giriş Yap</div>
                </div>
                <div class="step" id="step2">
                    <div class="step-number">2</div>
                    <div class="step-label">Formu Doldur</div>
                </div>
                <div class="step" id="step3">
                    <div class="step-number">3</div>
                    <div class="step-label">Yükle</div>
                </div>
                <div class="step" id="step4">
                    <div class="step-number">4</div>
                    <div class="step-label">Tamam</div>
                </div>
            </div>
            
            <div class="auth-section" id="authSection">
                <h3><i class="fas fa-lock"></i> YouTube Bağlantısı</h3>
                <p>YouTube'a video yüklemek için Google hesabınıza bağlanın</p>
                <button class="btn btn-google" id="googleAuthBtn">
                    <span id="authIcon">🔑</span>
                    <span id="authText">Google ile Hemen Giriş Yap</span>
                </button>
                
                <div class="security-notice">
                    <h4>🔒 Güvenlik Bilgisi</h4>
                    <p>• Token'larınız güvenli şekilde saklanır</p>
                    <p>• API anahtarları korunur</p>
                    <p>• Oturum güvenliği sağlanır</p>
                </div>

                <div class="real-notice">
                    <h4>✅ YouTube Bağlantısı</h4>
                    <p>• Gerçek YouTube hesabınıza video yükleyin</p>
                    <p>• Otomatik yayınlama ve yönetim</p>
                    <p>• Gerçek zamanlı ilerleme takibi</p>
                    <p>• YouTube Studio'da anında görünüm</p>
                </div>
            </div>
            
            <div class="form-section" id="formSection">
                <h3><i class="fas fa-upload"></i> Video Yükleme Formu</h3>
                
                <div class="form-group">
                    <label for="songTitle"><i class="fas fa-music"></i> Şarkı Adı — Sanatçı Adı</label>
                    <input type="text" id="songTitle" class="form-control" placeholder="Örnek: Şarkı Adı - Sanatçı Adı">
                </div>
                
                <div class="form-group">
                    <label for="videoDescription"><i class="fas fa-align-left"></i> Video Açıklaması</label>
                    <textarea id="videoDescription" class="form-control" placeholder="Video açıklamanızı buraya yazın..."></textarea>
                </div>
                
                <div class="form-group">
                    <label><i class="fas fa-eye"></i> Görünürlük</label>
                    <div class="privacy-options">
                        <label class="privacy-option selected">
                            <input type="radio" name="privacy" value="private" checked>
                            <div><i class="fas fa-lock"></i> Gizli</div>
                        </label>
                        <label class="privacy-option">
                            <input type="radio" name="privacy" value="unlisted">
                            <div><i class="fas fa-link"></i> Liste Dışı</div>
                        </label>
                        <label class="privacy-option">
                            <input type="radio" name="privacy" value="public">
                            <div><i class="fas fa-globe"></i> Herkese Açık</div>
                        </label>
                    </div>
                </div>
                
                <div class="form-group">
                    <label><i class="fas fa-file-audio"></i> Ses Dosyası (Seçtiğiniz formatta video olarak yüklenecek)</label>
                    <div class="file-upload" id="audioUpload">
                        <i class="fas fa-file-audio"></i>
                        <h3>Ses Dosyası Yükle</h3>
                        <p>MP3, MP4, M4A, WAV, FLAC formatlarını destekler</p>
                        <p><small>(Maksimum 100MB)</small></p>
                        <div class="file-info" id="audioFileInfo">Seçilen dosya yok</div>
                    </div>
                    <input type="file" id="audioFile" accept=".mp3,.mp4,.m4a,.wav,.flac" hidden>
                </div>
                
                <div class="form-group">
                    <label><i class="fas fa-cog"></i> Video Formatı Seçin</label>
                    <div class="format-options">
                        <label class="format-option selected">
                            <input type="radio" name="format" value="mp3" checked>
                            <div class="format-icon">🎶</div>
                            <div>MP3</div>
                            <small>En popüler</small>
                        </label>
                        <label class="format-option">
                            <input type="radio" name="format" value="mp4">
                            <div class="format-icon">🎬</div>
                            <div>MP4</div>
                            <small>En yaygın</small>
                        </label>
                        <label class="format-option">
                            <input type="radio" name="format" value="m4a">
                            <div class="format-icon">🎵</div>
                            <div>M4A</div>
                            <small>Yüksek kalite</small>
                        </label>
                        <label class="format-option">
                            <input type="radio" name="format" value="wav">
                            <div class="format-icon">🔊</div>
                            <div>WAV</div>
                            <small>Kayıpsız</small>
                        </label>
                        <label class="format-option">
                            <input type="radio" name="format" value="flac">
                            <div class="format-icon">🎧</div>
                            <div>FLAC</div>
                            <small>Profesyonel</small>
                        </label>
                    </div>
                </div>
                
                <div class="form-group">
                    <label><i class="fas fa-image"></i> Kapak Görseli (Opsiyonel)</label>
                    <div class="file-upload" id="imageUpload">
                        <i class="fas fa-image"></i>
                        <h3>Kapak Görseli Yükle</h3>
                        <p>JPG, PNG formatlarını destekler</p>
                        <p><small>(Maksimum 5MB)</small></p>
                        <div class="file-info" id="imageFileInfo">Seçilen dosya yok</div>
                    </div>
                    <input type="file" id="imageFile" accept=".jpg,.jpeg,.png" hidden>
                </div>
                
                <div class="form-group">
                    <label for="releaseDate"><i class="fas fa-calendar-alt"></i> Yayınlanma Tarihi</label>
                    <div class="date-input">
                        <input type="date" id="releaseDate" class="form-control">
                    </div>
                </div>
                
                <div class="action-buttons">
                    <button class="btn btn-youtube" id="youtubeUploadBtn">
                        <span id="convertIcon">🚀</span>
                        <span id="convertText">YouTube'a Yükle</span>
                    </button>
                    <button class="btn btn-drive" id="driveUploadBtn">
                        <i class="fab fa-google-drive"></i> Drive'a Yükle
                    </button>
                    <a class="btn btn-convert" href="https://kudukomuzikyapim.blogspot.com/p/m4adan-mp3e-donusturucu.html" target="_blank">
                        <i class="fas fa-exchange-alt"></i> M4A'dan MP3'e Dönüştürücü
                    </a>
                    <!-- YENİ BUTON: Dijital Müzik API Yönetim Paneli -->
                    <a class="btn btn-api" href="https://dijitalmuzikapiyonetimpaneli.42web.io" target="_blank">
                        <i class="fas fa-cogs"></i> Dijital Müzik API Yönetim Paneli
                    </a>
                    <a class="btn btn-purchase" href="https://kudukomuzikyapim.blogspot.com/p/muzik-albumu-satn-al.html" target="_blank">
                        <i class="fas fa-shopping-cart"></i> Satın Al
                    </a>
                </div>

                <div id="modeNotice" class="real-notice">
                    <p><strong>✅ YouTube Bağlantısı Aktif:</strong> Video gerçek YouTube hesabınıza yüklenecek.</p>
                </div>
            </div>
            <iframe width="560" height="315" src="https://www.youtube.com/embed/B5lL1mn3LpU?si=hKxM-d5gsVLxCToR" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
            <!-- YouTube Açıklama Bölümü -->
            <div class="youtube-description-section" id="youtubeDescriptionSection">
                <h3><i class="fab fa-youtube"></i> YouTube Açıklama Önizleme</h3>
                
                <!-- Kopyalama Bileşeni -->
                <div class="copy-container">
                    <span class="copy-text" id="copyText2">@KudukoMüzikYapım.Official</span>
                    <button class="copy-btn" onclick="copyToClipboard('copyText2')">
                        <i class="fas fa-copy"></i> Kopyala
                    </button>
                </div>

                <div class="youtube-description" id="yt-desc">
                    <p>Provided to YouTube by Kuduko Müzik Yapım</p>
                    <p><strong id="sampleTitle">Şarkı Adı (Official Music)</strong> · Kuduko Müzik Yapım</p>
                    <p id="sampleRepeat">Şarkı Adı (Official Music)</p>
                    <p>℗ Kuduko Müzik Yapım</p>
                    <br>
                    <p>YouTube Kanalı: https://www.youtube.com/@KudukoMüzikYapım.Official</p>
                    <p>İnstagram: https://instagram.com/kudukomuzikyapim</p>
                    <p>TikTok: https://www.tiktok.com/@kudukomuzikyapm.official</p>
                    <p>Snapchat: https://www.snapchat.com/@kuduko550</p>
                    <p>Linkedin: https://www.linkedin.com/in/kudukom%C3%BCzikyap%C4%B1m/</p>
                    <p>Discogs: https://www.discogs.com/release/33396431-Kuduko-M%C3%BCzik-Yap%C4%B1m-Plak-%C5%9Eirketi</p>
                    <p>WhatsApp Grubumuza Katılın: https://grupbul.com/grup/645305</p>
                    <p>Web site: https://kudukomuzikyapim.blogspot.com</p>
                    <p>Mağaza: https://kudukomuzikyapim.company.site</p>
                    <p>℗ & © Kuduko Müzik Yapım. Tüm hakları saklıdır.</p>
                    <p id="releaseDateParagraph" style="margin-top: 10px; font-style: italic;"></p>
                </div>

                <button class="description-copy-btn" onclick="copyToClipboard('yt-desc')">
                    <i class="fas fa-copy"></i> Açıklamayı Kopyala
                </button>

                <div class="youtube-preview">
                    <h4>📺 Video Önizleme</h4>
                    <iframe width="100%" height="300" src="https://www.youtube.com/embed/B5lL1mn3LpU" frameborder="0" allowfullscreen></iframe>
                </div>
            </div>
            
            <div class="progress-section" id="progressSection">
                <h3 id="progressTitle"><i class="fas fa-sync-alt fa-spin"></i> YouTube'a Yükleniyor...</h3>
                <div class="progress-bar">
                    <div class="progress-fill" id="progressFill"></div>
                </div>
                <p id="progressText">Hazırlanıyor...</p>
                
                <!-- Yükleme Durumu -->
                <div class="upload-status" id="uploadStatus">
                    <h4>📊 Yükleme Durumu</h4>
                    <div class="status-item">
                        <span class="status-label">Dosya:</span>
                        <span class="status-value" id="statusFileName">-</span>
                    </div>
                    <div class="status-item">
                        <span class="status-label">Boyut:</span>
                        <span class="status-value" id="statusFileSize">-</span>
                    </div>
                    <div class="status-item">
                        <span class="status-label">Format:</span>
                        <span class="status-value" id="statusFileFormat">-</span>
                    </div>
                    <div class="status-item">
                        <span class="status-label">Durum:</span>
                        <span class="status-value" id="statusFileStatus">-</span>
                    </div>
                    <div class="status-item">
                        <span class="status-label">İlerleme:</span>
                        <span class="status-value" id="statusProgress">0%</span>
                    </div>
                </div>
            </div>
            
            <div class="result-section" id="resultSection">
                <div class="success-icon">
                    <i class="fas fa-check-circle"></i>
                </div>
                <h3>✅ Başarılı!</h3>
                <p id="resultMessage">Video başarıyla YouTube'a yüklendi!</p>
                <a href="#" id="videoLink" target="_blank">YouTube'da Videoyu Görüntüle</a>
                <div id="videoPreview" class="video-preview"></div>
                <p style="margin-top: 15px;"><small id="resultNote">Video YouTube hesabınıza başarıyla yüklendi. YouTube Studio'dan yönetebilirsiniz.</small></p>
            </div>

            <!-- YouTube Kanalındaki Videolar Bölümü -->
            <div class="channel-videos-section" id="channelVideosSection">
                <h2><i class="fab fa-youtube"></i> YouTube Kanalımdaki Videolar</h2>
                
                <div class="videos-container" id="videosContainer">
                    <div class="no-videos">
                        <i class="fas fa-video-slash" style="font-size: 3rem; margin-bottom: 15px; color: #ccc;"></i>
                        <p>Henüz video yüklenmedi. İlk videonuzu yüklemek için yukarıdaki formu kullanın.</p>
                    </div>
                </div>
            </div>
            
            <!-- Yayınlar Sayfası Butonu -->
            <div style="text-align: center; margin-bottom: 30px;">
                <a class="btn-link" href="https://kudukomuzikyapim.blogspot.com/p/yaynlanan-m4a-videolar.html" target="_blank">
                    <i class="fas fa-external-link-alt"></i> Yayınlar Sayfası
                </a>
            </div>
            
            <!-- Neden KudukoMüzikYapım? Bölümü -->
            <div class="features-section">
                <h2>Neden M4A VİDEO'ları YouTube'a Yükleyin ?</h2>
                
                <div class="feature-grid">
                    <div class="feature-card">
                        <div class="feature-icon">⚡</div>
                        <h3>Hızlı Yüklemeler</h3>
                        <p>3 saniyede M4A VİDEO'ları YouTube'a Yükleyin.</p>
                    </div>
                    <div class="feature-card">
                        <div class="feature-icon">🎯</div>
                        <h3>Kalite Kaybı Yok</h3>
                        <p>Sesiniz değiştirilmediği için kalite kaybı yaşanmaz.</p>
                    </div>
                    <div class="feature-card">
                        <div class="feature-icon">🔒</div>
                        <h3>Güvenli</h3>
                        <p>M4A VİDEO'ları YouTube'a Yükleyin hiçbir zaman şifrenize erişemez.</p>
                    </div>
                    <div class="feature-card">
                        <div class="feature-icon">🎵</div>
                        <h3>Profesyonel</h3>
                        <p>Kayıt stüdyoları, müzisyenler ve yapımcılar düşünülerek yaratıldı.</p>
                    </div>
                    <div class="feature-card">
                        <div class="feature-icon">💫</div>
                        <h3>Basit</h3>
                        <p>Temiz tasarımı ve anlaşılır iş akışı M4A VİDEO'ları YouTube'a Yükleyin'u kullanmayı kolaylaştırır.</p>
                    </div>
                    <div class="feature-card">
                        <div class="feature-icon">📞</div>
                        <h3>7/24 Müşteri Desteği</h3>
                        <p>Destek, doğrudan yazılım geliştiricileri tarafından sağlanır.</p>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="footer">
            <div class="social-links">
               
            </div>
            <p></p>
            <p style="margin-top: 10px; font-size: 0.8rem;">M4A VİDEO'ları YouTube'a Yükleyin hiçbir zaman şifrenize erişemez, tüm kimlik doğrulama YouTube API'si aracılığıyla gerçekleştirilir.</p>
        </div>
    </div>

    <!-- Hata Bildirimi -->
    <div class="error-notification" id="errorNotification" style="display: none;">
        <div class="error-content">
            <i class="fas fa-exclamation-triangle"></i>
            <span id="errorMessage"></span>
            <button class="retry-btn" id="retryBtn" style="display: none;">Tekrar Dene</button>
        </div>
    </div>

    <!-- Yükleme Overlay -->
    <div class="loading-overlay" id="loadingOverlay">
        <div class="loading-content">
            <div class="loading-spinner-large"></div>
            <h3 id="loadingTitle">YouTube'a Yükleniyor</h3>
            <p id="loadingMessage">Lütfen bekleyin...</p>
        </div>
    </div>

    <!-- Google API Scripts -->
    <script src="https://apis.google.com/js/api.js"></script>
    <script src="https://accounts.google.com/gsi/client"></script>
    
    <script>
        // API Konfigürasyonu
        const API_CONFIG = {
            apiKey: "AIzaSyBkEKLAYYKJRyT5Wj2zu5UGRt-Jcjb27AE",
            clientId: "831662029531-svc09ni1k7p4cbk6q9u083rn79jcoehj.apps.googleusercontent.com",
            clientSecret: "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",
            scopes: [
                "https://www.googleapis.com/auth/youtube",
                "https://www.googleapis.com/auth/youtube.upload"
            ]
        };

        // Kopyalama Fonksiyonu
        function copyToClipboard(id) {
            const el = document.getElementById(id);
            const text = el.innerText || el.textContent;
            
            if (navigator.clipboard && window.isSecureContext) {
                navigator.clipboard.writeText(text).then(() => {
                    showCopySuccess(id);
                }).catch(err => {
                    fallbackCopyText(text, id);
                });
            } else {
                fallbackCopyText(text, id);
            }
        }

        function fallbackCopyText(text, id) {
            const textArea = document.createElement("textarea");
            textArea.value = text;
            textArea.style.position = "fixed";
            textArea.style.opacity = "0";
            document.body.appendChild(textArea);
            textArea.focus();
            textArea.select();
            
            try {
                const successful = document.execCommand('copy');
                if (successful) {
                    showCopySuccess(id);
                } else {
                    showCopyError(id);
                }
            } catch (err) {
                showCopyError(id);
            }
            
            document.body.removeChild(textArea);
        }

        function showCopySuccess(id) {
            let btn;
            if (id === 'copyText' || id === 'copyText2') {
                btn = document.querySelector('.copy-btn');
            } else if (id === 'yt-desc') {
                btn = document.querySelector('.description-copy-btn');
            }
            
            if (btn) {
                const originalHTML = btn.innerHTML;
                btn.innerHTML = '<i class="fas fa-check"></i> Kopyalandı!';
                btn.style.background = '#34a853';
                
                setTimeout(() => {
                    btn.innerHTML = originalHTML;
                    btn.style.background = '#ff0000';
                }, 2000);
            }
        }

        function showCopyError(id) {
            let btn;
            if (id === 'copyText' || id === 'copyText2') {
                btn = document.querySelector('.copy-btn');
            } else if (id === 'yt-desc') {
                btn = document.querySelector('.description-copy-btn');
            }
            
            if (btn) {
                const originalHTML = btn.innerHTML;
                btn.innerHTML = '<i class="fas fa-times"></i> Hata!';
                btn.style.background = '#ea4335';
                
                setTimeout(() => {
                    btn.innerHTML = originalHTML;
                    btn.style.background = '#ff0000';
                }, 2000);
            }
        }

        // Hata Gösterme Fonksiyonu
        function showError(message, retryCallback = null) {
            const errorNotification = document.getElementById('errorNotification');
            const errorMessage = document.getElementById('errorMessage');
            const retryBtn = document.getElementById('retryBtn');
            
            errorMessage.textContent = message;
            
            if (retryCallback) {
                retryBtn.style.display = 'inline-block';
                retryBtn.onclick = function() {
                    errorNotification.style.display = 'none';
                    retryCallback();
                };
            } else {
                retryBtn.style.display = 'none';
            }
            
            errorNotification.style.display = 'flex';
            
            setTimeout(() => {
                errorNotification.style.display = 'none';
            }, 5000);
        }

        // Yükleme Overlay Kontrolü
        function showLoading(title = 'YouTube\'a Yükleniyor', message = 'Lütfen bekleyin...') {
            document.getElementById('loadingTitle').textContent = title;
            document.getElementById('loadingMessage').textContent = message;
            document.getElementById('loadingOverlay').style.display = 'flex';
        }

        function hideLoading() {
            document.getElementById('loadingOverlay').style.display = 'none';
        }

        // Şarkı adı değişikliklerini takip et
        function setupSongTitleListener() {
            const songTitleInput = document.getElementById('songTitle');
            
            songTitleInput.addEventListener('input', function() {
                updateYouTubeDescription(this.value);
            });
            
            updateReleaseDate();
        }

        // YouTube açıklamasını güncelle
        function updateYouTubeDescription(songTitle) {
            const sampleTitle = document.getElementById('sampleTitle');
            const sampleRepeat = document.getElementById('sampleRepeat');
            
            if (songTitle && songTitle.trim() !== '') {
                sampleTitle.textContent = songTitle;
                sampleRepeat.textContent = songTitle;
                document.getElementById('youtubeDescriptionSection').style.display = 'block';
            } else {
                sampleTitle.textContent = 'Şarkı Adı (Official Music)';
                sampleRepeat.textContent = 'Şarkı Adı (Official Music)';
                document.getElementById('youtubeDescriptionSection').style.display = 'none';
            }
        }

        // Yayın tarihini güncelle
        function updateReleaseDate() {
            const releaseDateInput = document.getElementById('releaseDate');
            const releaseDateParagraph = document.getElementById('releaseDateParagraph');
            
            const today = new Date();
            const formattedDate = today.toISOString().split('T')[0];
            releaseDateInput.value = formattedDate;
            
            const options = { year: 'numeric', month: 'long', day: 'numeric' };
            const formattedDisplayDate = today.toLocaleDateString('tr-TR', options);
            releaseDateParagraph.textContent = `Yayınlanma Tarihi: ${formattedDisplayDate}`;
            
            releaseDateInput.addEventListener('change', function() {
                const selectedDate = new Date(this.value);
                const formattedSelectedDate = selectedDate.toLocaleDateString('tr-TR', options);
                releaseDateParagraph.textContent = `Yayınlanma Tarihi: ${formattedSelectedDate}`;
            });
        }

        // Dosya Doğrulama Fonksiyonu
        function validateFile(file, allowedTypes, maxSize) {
            const fileExtension = file.name.split('.').pop().toLowerCase();
            const isValidType = allowedTypes.includes(fileExtension);
            const isValidSize = file.size <= maxSize;
            
            if (!isValidType) {
                throw new Error(`Desteklenmeyen dosya formatı: ${fileExtension}. Desteklenen formatlar: ${allowedTypes.join(', ')}`);
            }
            
            if (!isValidSize) {
                throw new Error(`Dosya boyutu çok büyük: ${formatFileSize(file.size)}. Maksimum boyut: ${formatFileSize(maxSize)}`);
            }
            
            return true;
        }

        // Dosya boyutunu formatlama
        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }

        // Google OAuth Configuration
        let accessToken = null;
        let googleTokenClient = null;
        let uploadedVideos = JSON.parse(localStorage.getItem('kuduko_uploaded_videos')) || [];
        let uploadInProgress = false;

        document.addEventListener('DOMContentLoaded', function() {
            setupSongTitleListener();
            
            // İstatistik animasyonu
            function animateStats() {
                const statNumbers = document.querySelectorAll('.stat-number');
                statNumbers.forEach(stat => {
                    const originalText = stat.textContent;
                    let target;
                    
                    if (originalText.includes('M+')) {
                        target = parseFloat(originalText) * 1000000;
                    } else {
                        target = parseInt(originalText.replace('+', ''));
                    }
                    
                    let current = 0;
                    const increment = target / 50;
                    const timer = setInterval(() => {
                        current += increment;
                        if (current >= target) {
                            stat.textContent = originalText;
                            clearInterval(timer);
                        } else {
                            if (originalText.includes('M+')) {
                                stat.textContent = (current / 1000000).toFixed(1) + 'M+';
                            } else {
                                stat.textContent = Math.floor(current).toLocaleString() + (originalText.includes('+') ? '+' : '');
                            }
                        }
                    }, 30);
                });
            }
            
            // Dosya yükleme işlevselliği
            const audioUpload = document.getElementById('audioUpload');
            const audioFile = document.getElementById('audioFile');
            const audioFileInfo = document.getElementById('audioFileInfo');
            
            const imageUpload = document.getElementById('imageUpload');
            const imageFile = document.getElementById('imageFile');
            const imageFileInfo = document.getElementById('imageFileInfo');
            
            // Ses dosyası yükleme
            audioUpload.addEventListener('click', function() {
                audioFile.click();
            });
            
            audioFile.addEventListener('change', function() {
                handleFileSelect(audioFile, audioFileInfo, audioUpload, ['mp3', 'mp4', 'm4a', 'wav', 'flac'], 100 * 1024 * 1024);
            });
            
            // Görsel yükleme
            imageUpload.addEventListener('click', function() {
                imageFile.click();
            });
            
            imageFile.addEventListener('change', function() {
                handleFileSelect(imageFile, imageFileInfo, imageUpload, ['jpg', 'jpeg', 'png'], 5 * 1024 * 1024);
            });
            
            // Dosya seçimini işle
            function handleFileSelect(fileInput, fileInfoElement, uploadElement, allowedExtensions, maxSizeBytes) {
                if (fileInput.files.length > 0) {
                    const file = fileInput.files[0];
                    
                    try {
                        validateFile(file, allowedExtensions, maxSizeBytes);
                        
                        fileInfoElement.textContent = `Seçilen: ${file.name} (${formatFileSize(file.size)})`;
                        fileInfoElement.style.color = '#666';
                        uploadElement.style.borderColor = '#34a853';
                        uploadElement.style.background = '#f0f9f0';
                    } catch (error) {
                        fileInfoElement.textContent = `Hata: ${error.message}`;
                        fileInfoElement.style.color = 'red';
                        uploadElement.style.borderColor = 'red';
                        uploadElement.style.background = '#ffe6e6';
                        fileInput.value = '';
                    }
                } else {
                    fileInfoElement.textContent = 'Seçilen dosya yok';
                    fileInfoElement.style.color = '#666';
                    uploadElement.style.borderColor = '#4285f4';
                    uploadElement.style.background = '#f8f9ff';
                }
            }
            
            // Sürükle-bırak desteği
            function setupDragAndDrop(uploadElement, fileInput) {
                uploadElement.addEventListener('dragover', function(e) {
                    e.preventDefault();
                    e.stopPropagation();
                    uploadElement.classList.add('dragover');
                });
                
                uploadElement.addEventListener('dragleave', function(e) {
                    e.preventDefault();
                    e.stopPropagation();
                    uploadElement.classList.remove('dragover');
                });
                
                uploadElement.addEventListener('drop', function(e) {
                    e.preventDefault();
                    e.stopPropagation();
                    uploadElement.classList.remove('dragover');
                    
                    const files = e.dataTransfer.files;
                    if (files.length > 0) {
                        const dataTransfer = new DataTransfer();
                        dataTransfer.items.add(files[0]);
                        fileInput.files = dataTransfer.files;
                        
                        const event = new Event('change', { bubbles: true });
                        fileInput.dispatchEvent(event);
                    }
                });
            }
            
            setupDragAndDrop(audioUpload, audioFile);
            setupDragAndDrop(imageUpload, imageFile);
            
            // Gizlilik seçenekleri
            document.querySelectorAll('.privacy-option').forEach(option => {
                option.addEventListener('click', function() {
                    document.querySelectorAll('.privacy-option').forEach(opt => {
                        opt.classList.remove('selected');
                    });
                    this.classList.add('selected');
                    this.querySelector('input').checked = true;
                });
            });
            
            // Format seçenekleri
            document.querySelectorAll('.format-option').forEach(option => {
                option.addEventListener('click', function() {
                    document.querySelectorAll('.format-option').forEach(opt => {
                        opt.classList.remove('selected');
                    });
                    this.classList.add('selected');
                    this.querySelector('input').checked = true;
                });
            });
            
            // Google ile giriş butonu
            document.getElementById('googleAuthBtn').addEventListener('click', function() {
                handleAuthClick();
            });
            
            // YouTube'a yükleme butonu
            document.getElementById('youtubeUploadBtn').addEventListener('click', function() {
                if (uploadInProgress) {
                    showError('Zaten bir yükleme işlemi devam ediyor. Lütfen bekleyin.');
                    return;
                }
                
                const songTitle = document.getElementById('songTitle').value;
                const audioFileInput = document.getElementById('audioFile');
                
                if (!songTitle || !audioFileInput.files[0] || !accessToken) {
                    showError('Lütfen tüm gerekli alanları doldurun ve Google hesabınıza giriş yapın.');
                    return;
                }
                
                startYouTubeUpload();
            });
            
            // Drive'a yükleme butonu
            document.getElementById('driveUploadBtn').addEventListener('click', function() {
                if (!accessToken) {
                    showError('Lütfen önce Google hesabınıza giriş yapın.');
                    return;
                }
                
                const songTitle = document.getElementById('songTitle').value;
                const audioFile = document.getElementById('audioFile').files[0];
                
                if (!songTitle || !audioFile) {
                    showError('Lütfen şarkı adı ve ses dosyası seçin.');
                    return;
                }
                
                showError('Drive\'a yükleme özelliği yakında eklenecek!');
            });
            
            // Google OAuth işlemi
            function handleAuthClick() {
                try {
                    const authBtn = document.getElementById('googleAuthBtn');
                    const authIcon = document.getElementById('authIcon');
                    const authText = document.getElementById('authText');
                    
                    authIcon.innerHTML = '<div class="loading-spinner"></div>';
                    authText.textContent = 'Bağlanıyor...';
                    authBtn.disabled = true;

                    initializeGoogleAuth();
                    
                } catch (error) {
                    resetAuthButton();
                    showError('Google bağlantısı sırasında bir hata oluştu: ' + error.message);
                }
            }
            
            function initializeGoogleAuth() {
                try {
                    googleTokenClient = google.accounts.oauth2.initTokenClient({
                        client_id: API_CONFIG.clientId,
                        scope: API_CONFIG.scopes.join(' '),
                        callback: (response) => {
                            if (response.error !== undefined) {
                                resetAuthButton();
                                showError('Google bağlantısı başarısız: ' + response.error);
                            } else {
                                accessToken = response.access_token;
                                secureTokenStorage(accessToken);
                                startRealMode();
                            }
                        }
                    });

                    googleTokenClient.requestAccessToken({prompt: 'consent'});
                    
                } catch (error) {
                    resetAuthButton();
                    showError('Google bağlantısı sırasında bir hata oluştu: ' + error.message);
                }
            }
            
            function resetAuthButton() {
                const authBtn = document.getElementById('googleAuthBtn');
                const authIcon = document.getElementById('authIcon');
                const authText = document.getElementById('authText');
                
                authIcon.textContent = '🔑';
                authText.textContent = 'Google ile Hemen Giriş Yap';
                authBtn.disabled = false;
            }
            
            function secureTokenStorage(token) {
                try {
                    localStorage.setItem('youtube_access_token', token);
                    const encryptedToken = btoa(token + '|' + Date.now());
                    localStorage.setItem('yt_token_enc', encryptedToken);
                    localStorage.setItem('yt_token_time', Date.now().toString());
                } catch (error) {
                    console.error('Token saklama hatası:', error);
                }
            }
            
            function getSecureToken() {
                try {
                    const tokenTime = localStorage.getItem('yt_token_time');
                    if (tokenTime && (Date.now() - parseInt(tokenTime)) > 3600000) {
                        clearTokens();
                        return null;
                    }
                    
                    return localStorage.getItem('youtube_access_token');
                } catch (error) {
                    console.error('Token alma hatası:', error);
                    return null;
                }
            }
            
            function clearTokens() {
                try {
                    localStorage.removeItem('youtube_access_token');
                    localStorage.removeItem('yt_token_enc');
                    localStorage.removeItem('yt_token_time');
                    accessToken = null;
                } catch (error) {
                    console.error('Token temizleme hatası:', error);
                }
            }
            
            function startRealMode() {
                accessToken = accessToken || getSecureToken();
                
                if (!accessToken) {
                    resetAuthButton();
                    return;
                }

                document.getElementById('authSection').style.display = 'none';
                document.getElementById('formSection').style.display = 'block';
                document.getElementById('channelVideosSection').style.display = 'block';
                
                updateStepIndicator(2);
                displayUploadedVideos();
                fetchChannelVideos();
            }
            
            // Adım göstergesini güncelle
            function updateStepIndicator(stepNumber) {
                document.querySelectorAll('.step').forEach(step => {
                    step.classList.remove('active', 'completed');
                });
                
                for (let i = 1; i < stepNumber; i++) {
                    document.getElementById(`step${i}`).classList.add('completed');
                }
                
                document.getElementById(`step${stepNumber}`).classList.add('active');
            }
            
            // Yüklenen videoları göster
            function displayUploadedVideos() {
                const videosContainer = document.getElementById('videosContainer');
                
                if (uploadedVideos.length === 0) {
                    return;
                }
                
                videosContainer.innerHTML = uploadedVideos.map(video => `
                    <div class="video-item">
                        <div class="video-privacy">${getPrivacyIcon(video.privacy)} ${getPrivacyText(video.privacy)}</div>
                        <img src="${video.thumbnail}" alt="${video.title}" class="video-thumbnail">
                        <div class="video-info">
                            <div class="video-title">${video.title}</div>
                            <div class="video-meta">
                                <span>${video.views} görüntüleme</span>
                                <span>${video.date}</span>
                            </div>
                        </div>
                    </div>
                `).join('');
            }
            
            function getPrivacyIcon(privacy) {
                switch(privacy) {
                    case 'private': return '🔒';
                    case 'unlisted': return '🔓';
                    case 'public': return '🌐';
                    default: return '🔒';
                }
            }
            
            function getPrivacyText(privacy) {
                switch(privacy) {
                    case 'private': return 'Gizli';
                    case 'unlisted': return 'Liste Dışı';
                    case 'public': return 'Herkese Açık';
                    default: return 'Gizli';
                }
            }
            
            // Yeni video ekle
            function addNewVideo(videoData) {
                uploadedVideos.unshift(videoData);
                localStorage.setItem('kuduko_uploaded_videos', JSON.stringify(uploadedVideos));
                displayUploadedVideos();
            }
            
            // Gerçek YouTube yükleme işlemi
            function startYouTubeUpload() {
                uploadInProgress = true;
                
                const songTitle = document.getElementById('songTitle').value;
                const audioFile = document.getElementById('audioFile').files[0];
                const description = document.getElementById('videoDescription').value;
                const privacyStatus = document.querySelector('input[name="privacy"]:checked').value;
                const selectedFormat = document.querySelector('input[name="format"]:checked').value;
                
                document.getElementById('formSection').style.display = 'none';
                document.getElementById('progressSection').style.display = 'block';
                document.getElementById('uploadStatus').style.display = 'block';
                
                updateUploadStatus(
                    audioFile.name,
                    formatFileSize(audioFile.size),
                    selectedFormat.toUpperCase(),
                    'YouTube API bağlantısı kuruluyor...',
                    '0%'
                );
                
                updateStepIndicator(3);
                
                uploadToYouTubeAPI(songTitle, description, privacyStatus, audioFile, selectedFormat);
            }
            
            // Gerçek YouTube API yükleme işlevi
            async function uploadToYouTubeAPI(title, description, privacyStatus, file, format) {
                try {
                    document.getElementById('progressTitle').textContent = '🚀 YouTube\'a Yükleniyor';
                    
                    const videoId = await performYouTubeUpload(title, description, privacyStatus, file, format);
                    
                    showRealResult(title, privacyStatus, file, videoId, format);
                    
                } catch (error) {
                    uploadInProgress = false;
                    document.getElementById('statusFileStatus').textContent = 'Hata: ' + error.message;
                    document.getElementById('progressFill').style.width = '0%';
                    document.getElementById('progressText').textContent = 'Yükleme başarısız oldu. Lütfen tekrar deneyin.';
                    showError('YouTube yükleme hatası: ' + error.message, () => startYouTubeUpload());
                }
            }
            
            // Gerçek YouTube API yükleme fonksiyonu
            async function performYouTubeUpload(title, description, privacyStatus, file, format) {
                return new Promise(async (resolve, reject) => {
                    try {
                        showLoading('YouTube\'a Yükleniyor', 'Video hazırlanıyor...');
                        
                        const youtubeUploadUrl = 'https://www.googleapis.com/upload/youtube/v3/videos';
                        
                        const metadata = {
                            snippet: {
                                title: title,
                                description: description,
                                tags: ['müzik', 'audio', 'kudukomüzikyapım'],
                                categoryId: '10'
                            },
                            status: {
                                privacyStatus: privacyStatus,
                                selfDeclaredMadeForKids: false
                            }
                        };

                        let contentType = 'video/mp4';
                        switch(format) {
                            case 'mp3':
                                contentType = 'audio/mpeg';
                                break;
                            case 'mp4':
                                contentType = 'video/mp4';
                                break;
                            case 'm4a':
                                contentType = 'audio/mp4';
                                break;
                            case 'wav':
                                contentType = 'audio/wav';
                                break;
                            case 'flac':
                                contentType = 'audio/flac';
                                break;
                        }

                        document.getElementById('statusFileStatus').textContent = 'Upload başlatılıyor...';
                        
                        const initiateResponse = await fetch(`${youtubeUploadUrl}?uploadType=resumable&part=snippet,status`, {
                            method: 'POST',
                            headers: {
                                'Authorization': `Bearer ${accessToken}`,
                                'Content-Type': 'application/json',
                                'X-Upload-Content-Length': file.size,
                                'X-Upload-Content-Type': contentType
                            },
                            body: JSON.stringify(metadata)
                        });

                        if (!initiateResponse.ok) {
                            throw new Error('Upload başlatılamadı: ' + initiateResponse.statusText);
                        }

                        const uploadUrl = initiateResponse.headers.get('Location');
                        if (!uploadUrl) {
                            throw new Error('Upload URL alınamadı');
                        }

                        const CHUNK_SIZE = 256 * 1024;
                        const fileSize = file.size;
                        let uploadedBytes = 0;

                        const updateProgress = (bytesUploaded) => {
                            const progress = Math.round((bytesUploaded / fileSize) * 100);
                            document.getElementById('progressFill').style.width = progress + '%';
                            document.getElementById('statusProgress').textContent = progress + '%';
                            document.getElementById('statusFileStatus').textContent = `${progress}% yüklendi`;
                            document.getElementById('progressText').textContent = 
                                `Yükleniyor: ${Math.round(uploadedBytes / 1024 / 1024)}MB / ${Math.round(fileSize / 1024 / 1024)}MB`;
                        };

                        document.getElementById('statusFileStatus').textContent = 'Dosya yükleniyor...';

                        for (let start = 0; start < fileSize; start += CHUNK_SIZE) {
                            const end = Math.min(start + CHUNK_SIZE, fileSize);
                            const chunk = file.slice(start, end);
                            
                            const chunkResponse = await fetch(uploadUrl, {
                                method: 'PUT',
                                headers: {
                                    'Content-Range': `bytes ${start}-${end - 1}/${fileSize}`,
                                    'Content-Type': contentType,
                                    'Authorization': `Bearer ${accessToken}`
                                },
                                body: chunk
                            });

                            if (!chunkResponse.ok && chunkResponse.status !== 308) {
                                throw new Error('Chunk yükleme hatası: ' + chunkResponse.statusText);
                            }

                            uploadedBytes = end;
                            updateProgress(uploadedBytes);
                        }

                        document.getElementById('statusFileStatus').textContent = 'Upload tamamlanıyor...';

                        const finalResponse = await fetch(uploadUrl, {
                            method: 'PUT',
                            headers: {
                                'Content-Range': `bytes */${fileSize}`,
                                'Authorization': `Bearer ${accessToken}`
                            }
                        });

                        if (!finalResponse.ok) {
                            throw new Error('Upload tamamlanamadı: ' + finalResponse.statusText);
                        }

                        const result = await finalResponse.json();
                        
                        if (!result.id) {
                            throw new Error('Video ID alınamadı');
                        }

                        const thumbnailFile = document.getElementById('imageFile').files[0];
                        if (thumbnailFile) {
                            await uploadThumbnail(result.id, thumbnailFile);
                        }

                        hideLoading();
                        resolve(result.id);

                    } catch (error) {
                        hideLoading();
                        reject(error);
                    }
                });
            }

            // Kapak görseli yükleme fonksiyonu
            async function uploadThumbnail(videoId, thumbnailFile) {
                try {
                    const thumbnailUrl = `https://www.googleapis.com/upload/youtube/v3/thumbnails/set?videoId=${videoId}`;
                    
                    const response = await fetch(thumbnailUrl, {
                        method: 'POST',
                        headers: {
                            'Authorization': `Bearer ${accessToken}`,
                            'Content-Type': 'image/jpeg'
                        },
                        body: thumbnailFile
                    });

                    if (!response.ok) {
                        console.warn('Kapak görseli yüklenemedi');
                    }
                } catch (error) {
                    console.warn('Kapak görseli yükleme hatası:', error);
                }
            }

            // YouTube kanal bilgilerini getir
            async function fetchChannelVideos() {
                try {
                    const response = await fetch(`https://www.googleapis.com/youtube/v3/channels?part=snippet&mine=true&key=${API_CONFIG.apiKey}`, {
                        headers: {
                            'Authorization': `Bearer ${accessToken}`
                        }
                    });

                    if (response.ok) {
                        const data = await response.json();
                        if (data.items && data.items.length > 0) {
                            const channelId = data.items[0].id;
                            await fetchUploadedVideos(channelId);
                        }
                    }
                } catch (error) {
                    console.warn('Kanal bilgileri alınamadı:', error);
                }
            }

            // Yüklenen videoları getir
            async function fetchUploadedVideos(channelId) {
                try {
                    const response = await fetch(`https://www.googleapis.com/youtube/v3/search?part=snippet&channelId=${channelId}&type=video&maxResults=12&order=date&key=${API_CONFIG.apiKey}`, {
                        headers: {
                            'Authorization': `Bearer ${accessToken}`
                        }
                    });

                    if (response.ok) {
                        const data = await response.json();
                        displayRealVideos(data.items);
                    }
                } catch (error) {
                    console.warn('Videolar alınamadı:', error);
                }
            }

            // Gerçek videoları göster
            function displayRealVideos(videos) {
                const videosContainer = document.getElementById('videosContainer');
                
                if (!videos || videos.length === 0) {
                    return;
                }

                videosContainer.innerHTML = videos.map(video => `
                    <div class="video-item">
                        <div class="video-privacy">🌐 Herkese Açık</div>
                        <img src="${video.snippet.thumbnails.medium.url}" alt="${video.snippet.title}" class="video-thumbnail">
                        <div class="video-info">
                            <div class="video-title">${video.snippet.title}</div>
                            <div class="video-meta">
                                <span>${formatDate(video.snippet.publishedAt)}</span>
                            </div>
                        </div>
                    </div>
                `).join('');
            }

            // Tarih formatlama
            function formatDate(dateString) {
                const date = new Date(dateString);
                return date.toLocaleDateString('tr-TR');
            }
            
            // Gerçek sonuç gösterimi
            function showRealResult(title, privacyStatus, file, videoId, format) {
                const videoUrl = `https://www.youtube.com/watch?v=${videoId}`;
                
                document.getElementById('progressSection').style.display = 'none';
                document.getElementById('resultSection').style.display = 'block';
                
                document.getElementById('videoLink').href = videoUrl;
                document.getElementById('videoLink').textContent = 'YouTube\'da Videoyu Görüntüle';
                document.getElementById('resultMessage').textContent = `🎉 Video başarıyla YouTube'a yüklendi! (${format.toUpperCase()} formatında)`;
                document.getElementById('resultNote').textContent = 'Video YouTube hesabınıza başarıyla yüklendi. YouTube Studio\'dan yönetebilirsiniz.';
                
                document.getElementById('videoPreview').innerHTML = `
                    <h4>📺 Video Önizleme</h4>
                    <iframe width="100%" height="400" src="https://www.youtube.com/embed/${videoId}" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen style="border-radius:15px;"></iframe>
                    <div style="margin-top: 15px;">
                        <p><strong>Video ID:</strong> ${videoId}</p>
                        <p><strong>Başlık:</strong> ${title}</p>
                        <p><strong>Gizlilik:</strong> ${privacyStatus}</p>
                        <p><strong>Format:</strong> ${format.toUpperCase()}</p>
                        <p><strong>Dosya:</strong> ${file.name} (${(file.size/(1024*1024)).toFixed(2)}MB)</p>
                    </div>
                `;
                
                updateStepIndicator(4);
                
                const newVideo = {
                    id: videoId,
                    title: title,
                    thumbnail: `https://img.youtube.com/vi/${videoId}/hqdefault.jpg`,
                    views: '0',
                    date: new Date().toLocaleDateString('tr-TR'),
                    privacy: privacyStatus,
                    format: format,
                    url: videoUrl
                };
                
                addNewVideo(newVideo);
                uploadInProgress = false;
            }
            
            // Yükleme durumu güncelleme
            function updateUploadStatus(fileName, fileSize, fileFormat, status, progress) {
                document.getElementById('statusFileName').textContent = fileName;
                document.getElementById('statusFileSize').textContent = fileSize;
                document.getElementById('statusFileFormat').textContent = fileFormat;
                document.getElementById('statusFileStatus').textContent = status;
                document.getElementById('statusProgress').textContent = progress;
            }
            
            // Sayfa yüklendiğinde token kontrolü
            const savedToken = getSecureToken();
            if (savedToken) {
                accessToken = savedToken;
                startRealMode();
            }
            
            // Sayfa yüklendiğinde istatistik animasyonunu başlat
            setTimeout(() => {
                animateStats();
            }, 1000);
        });
    </script>
</body>
</html>
